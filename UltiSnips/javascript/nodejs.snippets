#nodejs S
snippet pkg
{
	"family": "${1:game}",
	"name": "${2:demo1}",
	"version": "${3:1.0.0}",
	"description": "${4:desc}",
	"scripts": {
		"test": "-save-dev"
	},
	"repository": {
		"type": "${5:svn_git}",
		"url": ""
	},
	"license": "${6:MIT}",
	"devDependencies": {
		"grunt": "^0.4.5",
		"grunt-cmd-transport": "^0.4.1",
		"grunt-cmd-concat": "^0.2.7",
		"grunt-contrib-clean": "^0.6.0",
		"grunt-contrib-uglify": "^0.6.0"
	}
}
endsnippet

snippet nodeget
grunt.registerTask('test', function(){
	var done = this.async(),
	http = require('http');

	http.get(${1:url}, function(res){
		var r = '';

		res.on('data', function(chunk){
			r = chunk.toString();
		});
			
		res.on('end', function(){
			console.log(r);
			done();
		});
	}).on('error', function(e) {
		console.log("Got error: " + e.message);
	});
});
endsnippet


snippet nodecmd
var spawn = require('child_process').spawn;
spawn('svn',['commit','-m','"更新公共电台本地包版本"', myPath.config.split("/").pop()], {
	"cwd":myPath.config.replace(/\/[^\/]+$/,"/"),
	"stdio": [process.stdin, process.stdout, process.stderr]
});
endsnippet

snippet nodecmd2
var spawn = require('child_process').spawn,
cmd = spawn('cmd.exe', ["/s", "/c", "node", "-v"]);
/*cmd = require('child_process').exec('node -v');*/

cmd.stdout.on('data', function(data){
	console.log('\n' + data);
});

cmd.stderr.on('data', function(data){
	console.log('\n' + data);
});

cmd.on('exit', function(code, signal){
	console.log('\n' + code);
});
endsnippet

snippet nodemd5
/*加密相关*/
var crypto = require('crypto');
var hash = crypto.createHash('md5');
hash.update(${1:'admin'});
var str = hash.digest(${2:'hex,binary,base64'});
endsnippet

snippet download
var http = require('http');
/**
* Utility function that downloads a URL and invokes
* callback with the data.
*/
function download(url, callback) {
	http.get(url, function(res) {
		var data = "";
		res.on('data', function(chunk) {
			data += chunk;
		});
		res.on("end", function() {
			callback(data);
		});
	}).on("error", function() {
		callback(null);
	});
}
endsnippet
#nodejs E

