snippet com "react es6定义组件"
class ${1:Photo} extends ${2:React.Component} {
	/*构造函数初始化*/
	constructor(props){
		super(props);
		this.state = {
			loopsRemaining: this.props.maxLoops,
		};
	};

	/* 静态方法 */
	${3:static defaultProps = {
	};
	static propTypes = {
	};}

	/* 渲染 */
	render() {
		return (
			${4:<Image source={this.props.source} />}
		);
	}
}
endsnippet

snippet impra "导入react-native头部"
import React, { Component } from 'react';
import { AppRegistry, StyleSheet, ScrollView, Text, TextInput, View, Image } from 'react-native';
endsnippet

snippet reactcss "创建css"
const styles = StyleSheet.create({
	bigblue: {
		color: 'blue',
		fontWeight: 'bold',
		fontSize: 30,
	},
	red: {
		color: 'red',
	},
});
endsnippet


snippet fd "组件布局，row水平，column竖直"
flexDirection: ${1: 'row|column'}
endsnippet

snippet ai "决定其子元素沿着次轴（与主轴垂直的轴，比如若主轴方向为row，则次轴方向为column）的排列方式"
alignItems: ${1: 'flex-start|center|flex-end|stretch'}
endsnippet 

snippet jc "子元素沿着主轴的排列方式"
justifyContent: ${1: 'flex-start|center|flex-end|space-around|space-between'}
endsnippet


snippet reducer "创建一个reducer"
function ${1:'reducerName'}(state = 0, action) {
	switch (action.type) {
		case '${2:INCREMENT}':
			return ${3:state + 1};
		default:
			return state;
	}
}
$0
endsnippet

snippet action "创建一个action函数"
function ${1:'actionName'}(${2}){
	return {
		type: ${3:},
		index: ${4},
		filter: ${5},
		$2
	};
}
$0
endsnippet
