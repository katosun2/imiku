# Prototype
snippet test
/${2:^}/.${1:TARGET}
endsnippet

snippet maxnum
Number.MAX_VALUE
endsnippet

snippet minnum
Number.MAX_VALUE
endsnippet

snippet jsmaobao
while (tag) {
	if (!tag || tag == this) {
		break;
	}
	if (tag.nodeType == 1 && tag.tagName.toLowerCase() == 'li') {
		${0://code}
		break;
	} else {
		//向上查找
		tag = tag.parentNode;
	}
}
endsnippet

snippet gettext
var getText = function(el){
	var message =  "";
	if (document.body.innerText) {
		message = el.innerText;
	} else {
		message = el.innerHTML.replace(/\&lt;br\&gt;/gi,"\n").replace(/(&lt;([^&gt;]+)&gt;)/gi, "");
	}
	return message;
};
endsnippet

snippet constr
${1:class_name}.prototype.constructor = ${1:class_name}
endsnippet

snippet getStyle
var style = document.getElementById("${1:id}").currentStyle || document.defaultView.getComputedStyle(document.getElementById("${2:$1}"), '')
endsnippet

snippet jszc
if (!'${1:pattern}' in document.create_rElement_x('${2:input}') ) {
	// do client/server side validation
	${3}
}
endsnippet

snippet switch
switch(${1:expression}) {
	case '${3:case}':
		${4:// code}
		break;
	${5://case...}
		default:
		${2:// code}
		break;
	}
endsnippet

snippet module
var module = function(){
	function f(){
		${2://code}
		}
		return {
			init : function(){
				${1://code}
				}
			}
		}();
	}
};
endsnippet

snippet a
alert(${1});
endsnippet

snippet class
var ClassName = function(a, b){
	/* public variable */
	this.a = '' || a;
	this.b = '' || b;
	/* private variables */
	var x = '';
	var y = ''
	/* public methods */
	this.pu = function(){
		this.a = a;
		tihs.b = b;
	}
	/* variable */
	var pr = function(){
		${1://code}
		}
	}
	endsnippet


snippet jqplug
;(function($){
	$.fn.pluginName = function(opt) {
		var defaults = {
			${1}
		};
		var opt = $.extend(defaults,opt);
		return this.each(function() {
			${2:_this} = $(this);
			${3}
		});
	};
})(jQuery);
endsnippet

snippet jqajax
$.ajax({
	type: '${1:get}',
	url : '',
	dataType:'${2:json}',
	data: 'rand=1',
	success : function(msg){
		${4}
	},
	error : function(msg){
		${3}
	}
});
endsnippet

snippet log
console.log(${1:str});
endsnippet

snippet createclass
/*创建一个类对象*/
function ${1:Classname}(${2:param1}){
	${2:param1} = ${3:value};
	//.....
}
${1:Classname}.prototype.${4:value} = ${5:value};
var ${2:new_object} = new ${1:Classname}();
endsnippet

snippet extendclass
/*通用继承类方法*/
function object(o) {
	function F() {}
	F.prototype = o;
	return new F();
}
var child = object(Parant);
endsnippet

snippet extendclass2
/*直接使用prototype继承,创建父对象为空*/
function ${1:Parentclass}(){}
/*通过定义prototype继续*/
${1:Parentclass}.prototype.species = "动物";
/*通用做法*/
${2:Childclass}.prototype = ${1:Parentclass}.prototype;
${2:Childclass}.prototype.constructor = ${2:Childclass};
var ${3:object} = new ${2:Childclass}(${4:value});
endsnippet

snippet extendclass3
function extendfunc(${2:Childclass},${1:Parentclass}){
	/*利用空对象继承封装*/
	var F = function(){};
	F.prototype = ${1:Parentclass}.prototype;
	${2:Childclass}.prototype = new F();
	//${2:Childclass}.prototype.constructor = ${2:Childclass};
	${2:Childclass}.uber = ${1:Parentclass}.prototype;
}
extend(Cat,Animal);
endsnippet

snippet extendclass4
/*拷贝继承*/
function extendfunc(${2:Childclass}, ${1:Parentclass}) {
	var p = ${1:Parentclass}.prototype;
	var c = ${2:Childclass}.prototype;
	for (var i in p) {
		c[i] = p[i];
	}
	c.uber = p;
}
endsnippet

snippet extendclass5
/*浅拷贝*/
function extendCopy(${1:Parentclass}) {
	var c = {};
	for (var i in ${1:Parentclass}) { 
		c[i] = ${1:Parentclass}[i];
	}
	c.uber = ${1:Parentclass};
	return c;
}
endsnippet

snippet extendclass6
/*深拷贝*/
function deepCopy(${1:Parentclass}, c) {
	c = c || {};
	for (var i in ${1:Parentclass}) {
		if (typeof ${1:Parentclass}[i] === 'object') {
			c[i] = (${1:Parentclass}[i].constructor === Array) ? [] : {};
			deepCopy(${1:Parentclass}[i], c[i]);
		} else {
			c[i] = ${1:Parentclass}[i];
		}
	}
	return c;
}
endsnippet

snippet constrclass1
/*使用apply()将父对象的构造函数绑定在子对象继承*/
function ${1:ChildClass}(${4:param}){
	${2:ParentClass}.apply(this, arguments);
	this.${4:param} = ${5:value};
	//...
}
var ${3:object} = new ${1:ChildClass}();
endsnippet

snippet constrclass2
/*使用prototype模式构造函数并继承*/
${1:Childclass}.prototype = new ${2:Parentclass}();
/*重置了prototype,使里面的属性constructor删除了，需要重置*/
${1:Childclass}.prototype.constructor = ${1:Childclass};
var ${3:object}= new ${1:Childclass}(${4:value});
endsnippet

snippet getjsonp
var getjsonp = function(){
	var script = document.createElement('script');
	script.setAttribute("type", "text/javascript");
	script.setAttribute('src', url);
	script.setAttribute("id", "jsondata");
	document.getElementsByTagName('head')[0].appendChild(script); 
};
endsnippet

snippet jsxzevent
document.window.onorientationchange = function(){};
endsnippet

snippet jsbodyfontsize
var style = document.body.currentStyle || document.defaultView.getComputedStyle(document.body, '')
console.log(style.fontSize);
endsnippet
snippet jqjsonp
$.ajax({
	type: "get",
	async: false,
	url: "",
	dataType: "jsonp",
	data:"",
	jsonp: "callback",//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)
	jsonpCallback:"getinfo",//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写"?"，jQuery会自动为你处理数据
	success: function(json){
		//
	},
	error: function(){
		//
	}
});
endsnippet

snippet randxy
Math.floor(Math.max(min, Math.random() * (max + 1)));
endsnippet

snippet unixtime
Math.round(new Date().getTime() / 1000);
endsnippet

snippet isie 
var ISIE = !! window.ActiveXObject;
var ISIE6 = ISIE && ! window.XMLHttpRequest;
endsnippet
snippet jsdiv
var ${1:popDiv} = document.createElement("div");
${2:$1}.id = "${7:id}";
${3:$1}.className = "${8:className}";
${4:$1}.setAttribute("${9:attr}","${10:value}");
${11:$1}.height = 0;
${5:$1}.style.cssText = ["position:absolute", "display:block"].join(";");
document.body.appendChild(${6:$1});
endsnippet

snippet jsdivs
var arrText=["1","2","3","4","5","6","7","8","9","10"];
var oFrag=document.createDocumentFragment();//创建页面碎片
for(var i=0;i<arrText.length;i++){
	var op=document.createElement("P");
	var oText=document.createTextNode(arrText[i]);
	op.appendChild(oText);
	oFrag.appendChild(op);
}
document.body.appendChild(oFrag);
endsnippet

snippet jsscript
(function() {
	var ${1:s} = document.createElement('script');
	${2:$1}.type = 'text/javascript';
	${3:$1}.async = true;
	${4:$1}.src = ${6:('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'};
		var el = document.getElementsByTagName('script')[0];
	el.parentNode.insertBefore(${5:$1}, el);
})();
endsnippet

snippet jsscripts
(function() {
	var el = document.getElementById("mod_stat"),
	oFrag = document.createDocumentFragment(),
	_bdhmProtocol = (("https:" == document.location.protocol) ? "https://" : "http://"),
		frags = [];
	_bdhmProtocol += "hm.baidu.com/h.js%3Fed3eae6589b7343c267cb8191d83a284";
	_bdhmProtocol = unescape(_bdhmProtocol);
	frags = ["http://s10.cnzz.com/stat.php?id=1947335&web_id=1947335","http://tajs.qq.com/stats?sId=15811003",_bdhmProtocol];
		if(el){
		for(var i = 0;i < frags.length; i++){
			var s = document.createElement("script");
			s.type = 'text/javascript';
			s.async = true;
			s.src = frags[i];
			oFrag.appendChild(s);
		}
		el.appendChild(oFrag);
	}
})();
endsnippet

snippet jsdivbnb
var subElem = document.create('div'),
elem = document.getElementById('animated');
elem.style.display = 'none';//先隐藏
elem.appendChild(subElem);
elem.style.width = '320px';
elem.style.height = '480px';
elem.style.display = 'block';//再显示
endsnippet

snippet jsdivclone
var tmpnode = document.getElementById('container'),
clone = tmpnode.cloneNode(true),
list = ['foo','bar','baz'],elem,contents;
clone.setAttribute('width','50%');
for(var i = 0; i<list.length; i++){
	elem = document.createElement('div');
	content = document.createTextNode(list[i]);
	clone.appendChild(elem);
}
original.parentNode.replaceChild(clone,original);
endsnippet

snippet htmlcode
function HTMLDECODE(str) {
	str = str || "";
	if (str === "" || str.length === 0) {
		return '';
	}
	str = str.replace(/&gt;/g, ">");
	str = str.replace(/&lt;/g, "<");
	str = str.replace(/&#047;/g, '/');
	str = str.replace(/&#039;/g, "'");
	str = str.replace(/&quot;/g, '"');
	str = str.replace(/&nbsp;/g, " ");
	str = str.replace(/&amp;/g, "&");
	return str;
}

function HTMLENCODE(str) {
	str = str || "";
	if (str === "" || str.length === 0) {
		return '';
	}
	str = str.replace(/>/g, "&gt;");
	str = str.replace(/</g, "&lt;");
	str = str.replace(/\//g, '&#047;');
		str = str.replace(/'/g, "&#039;");
	str = str.replace(/"/g, '&quot;');
	str = str.replace(/\s| /g, "&nbsp;");
	str = str.replace(/&/g, "&amp;");
	return str;
}
endsnippet

snippet jqscroll
/**
* 文字滚动
* lh 行高, speed 速度, delay 间隔时间, id 容器id
*/
function startmarquee(lh,speed,delay,id){
	var t; //定时器
	var p=false; //初始化为允许滚动状态
	var o=document.getElementById(id);   //获取容器
	$('#'+id).attr('run','1');
	o.innerHTML+=o.innerHTML; 
	o.onmouseover=function(){p=true;}; 
	o.onmouseout=function(){p=false;};
	o.scrollTop = 0; //初始化滚动高度
	function start() { 
		t=setInterval(scrolling,speed); 
		if(!p) o.scrollTop += 2;
	}
function scrolling() { 
	if(o.scrollTop%lh!==0){ 
		o.scrollTop += 2;
		if(o.scrollTop>=o.scrollHeight/2) o.scrollTop = 0;
	}else{
		clearInterval(t); 
		setTimeout(start,delay);
	}
}
setTimeout(start,delay); 
}
endsnippet

snippet randint
//随机min-max之间的正整数
var RANDOMXY = function(min, max) {
	return Math.floor(Math.max(min, Math.random() * (max + 1)));
};
endsnippet

# appcan UEX
snippet uexwc
uexWindow.closeToast();
endsnippet

snippet uexwt
uexWindow.toast(${1:1},${2:5},${3:string},${4:time});
endsnippet

snippet zytouch 
function zy_touch(class, func){
	　var t = event.currentTarget;
	　if (!t.zTouch) {
		t.zTouch = new zyClick(t, func, class);
		t.zTouch._touchStart(event);
	}
} 
endsnippet

snippet uexss
$$("${1:obj_id}").gesture = new zyEvent("${1:obj_id}", function(me, dx, dy) { 
	//移动过程中事件
}, function(me, dx, dy, t) { 
	//手指松开后事件
	if (t == "right") zy_anim_push(me, "a-mr");
}, false, function(e){
	//对象动画结束事件,后面的loadmaincon()是主窗口root的函数
	uexWindow.evaluateScript("root", "0", "loadmaincon()");
});
endsnippet

snippet uexjsonp
var xmlHttp = function() {
	uexXmlHttpMgr.open("1", "GET", url, "");
	uexXmlHttpMgr.send("1");
};
var successCB = function(opid, stauts, result) {
	if (parseInt(stauts, 10) === 1) {
		result = JSON.parse(result);
		uexXmlHttpMgr.close("1");
		//code
		uexWindow.closeToast();
	}else if(parseInt(stauts, 10) === 0){
		//加载中
	}else if(parseInt(stauts, 10) === -1){
		//加载出错
	}
};
uexXmlHttpMgr.onData = successCB;
uexWidgetOne.cbError = function(opCode, errorCode, errorInfo) {
	uexWindow.toast(0, "5", "数据加载出错", 5000);
};
xmlHttp();
endsnippet

snippet jsreg
var param1 = "^"+param1;
var re = new RegExp(${1:param1}, "gi");
re.test(${2:param2})
endsnippet

snippet jszw
//JavaScript
if(escape(str).indexOf("%u") < 0){}
endsnippet

snippet isarray
Object.prototype.toString.call(key)==='[object Array]'
endsnippet

snippet isarr
${1:Object} instanceof Array
endsnippet

snippet jsclass
;(function(){
	var ${1:ClassName} = function(name,age,opt){
		if(!(this instanceof Dog)){
			return new Dog(name,age);
		}
		this.name = name;
		this.age = age;
		this.setOpt(opt || {});
	};
	${2:$1}.prototype={
		setOpt:function(opt){
			var fun = function(){};
			this.opt = {
				width : 447,
				height : 228,
				id : 'pop_dialog',
				cls : 'pop_dialog',
				content :'',    
				overlay : true,
				afterShow : fun
			};
			for (var property in opt) {
				this.opt[property] = opt[property];
			}
		},
		getName:function(){
			console.log(this.name);
			return this;
		},
		getAge:function(){
			console.log(this.age);
			return this;
		}
	};
	return (window.${3:$1} = ${4:$1});
})();
//${4:$1}("旺旺",3).getName().getAge();
endsnippet

snippet jsaddevent1
var addEvent = (function () {
	if (document.addEventListener) {
		return function (type, element, fun) {
			element.addEventListener(type, fun, false);
		};
	}
	else if (document.attachEvent) {
		return function (type, element, fun) {
			element.attachEvent('on' + type, fun);
		};
	}
	else {
		return function (type, element, fun) {
			element['on' + type] = fun;
		};
	}
})();
endsnippet

snippet jsaddevent
function addEvent(type, element, fun) {
	if (element.addEventListener) {
		addEvent = function(type, element, fun) {
			element.addEventListener(type, fun, false);
		};
	} else if (element.attachEvent) {
		addEvent = function(type, element, fun) {
			element.attachEvent('on' + type, fun);
		};
	} else {
		addEvent = function(type, element, fun) {
			element['on' + type] = fun;
		};
	}
	return addEvent(type, element, fun);
}
endsnippet

snippet jsajax
/**
* ajax
* @name ajax
* @function
* @param { String } method 请求方法[post|get]
* @param { String } url 请求地址
* @param { Boolean } async 是否异步请求(可选)
* @param { String | Object } args 请求参数(可选)
* @param { Function } callback 回调函数(可选)
* @param { Function } error 请求页面出错时的回调函数(可选)
* @param { String } docType 返回文档格式(可选)
*/
function ajax(method, url, async, args, callback, error, docType){
	var params = args;
	async = async == null ? true: async;
	if (args) {
		if (typeof args === "object") {
			var str = "";
			for (var i in args) {
				str += i + "=" + args[i] + "&";
			}
			params = str.substr(0, str.length - 1);
		}
	}

	method = method ? method.toUpperCase() : "POST";
	docType = docType ? docType: "text";
	var XMLHttp = null;
	if (window.XMLHttpRequest && !(window.ActiveXObject)) {
		XMLHttp = new XMLHttpRequest();
	} else if (window.ActiveXObject) {
		try {
			XMLHttp = new ActiveXObject("Microsoft.XMLHTTP");
		} catch(otherMSIE) {
			try {
				XMLHttp = new ActiveXObject("Msxml2.XMLHTTP");
			} catch(NoSupport) {
				XMLHttp = null;
			}
		}
	}

	XMLHttp.onreadystatechange = function() {
		if (XMLHttp.readyState == 4) {
			if (XMLHttp.status == 200 || XMLHttp.status == 0) {
				var param = null;
				switch (docType) {
					case "xml":
						param = XMLHttp.responseXML;
					break;
					case "json":
						param = Kg.JSON.parse(XMLHttp.responseText);
					break;
					default:
						param = XMLHttp.responseText;
				}
				callback && callback(param, XMLHttp);
				XMLHttp = null;
			} else {
				error && error();
			}
		}
	};

	if (method == "GET") {
		if (url.indexOf("?") != -1) {
			XMLHttp.open(method, url + (params ? ("&" + params) : ''), async);
		} else {
			XMLHttp.open(method, url + (params ? ("?" + params) : ''), async);
		}
		XMLHttp.send(null);
	} else {
		XMLHttp.open(method, url, async);
		XMLHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
		XMLHttp.send(params);
	}
	return XMLHttp;
}
endsnippet

snippet jsjsonp
/**
* loadScript
* @name loadScript
* @function
* @param { String } url 请求地址
* @param { String | Object } args 请求参数(可选)
* @param { Function } callback 回调函数(可选)
*/
function loadScript(url, args, callback) {
	var params = args || "";
	if (args && (typeof args === "object")) {
		var str = "";
		for(var i in args){
			str += i + "=" + args[i] + "&";
		}
		params = str.substr(0, str.length - 1);
	};
	var script = document.createElement("script");
	script.type = 'text/javascript';
	if(/\?/g.test(url) && params === ""){
		script.src = url + "?" + params;
	}else{
		script.src = url;
	}
	script.onload = script.onreadystatechange = function() {
		if (!this.readyState || (this.readyState == "complete" || this.readyState == "loaded")) {
			callback && callback();
			script.onreadystatechange = script.onload = null;
			script = null;
		}
	};
	document.getElementsByTagName("head")[0].appendChild(script);
}
endsnippet

snippet jsinter
/**
* intercept
* @name intercept
* @function
* @param { Number } length 显示的长度
* @param { String } appendStr 截取的长度
*/
String.prototype.intercept = function(length, appendStr){
	var str = this;
	str = str.trim();
	if(str.getBytes() < length) {
		return str;
	}
	var countLen = 0;
	var charCount = 0;
	if (appendStr.length > 0) {
		length = length - appendStr.length;
	}
	for(var i = 0; i < str.length; i++){
		if (this.charCodeAt(i) > 256){
			countLen += 2;
		}else{
			countLen += 1;
		}
		if(countLen > length){
			break;
		}
		charCount++;
	}
	return str.substr(0, charCount) + appendStr;
};
endsnippet

snippet jstrim
String.prototype.trim = function(){
	return this.replace(/^(\s|\u3000)*|(\s|\u3000)*$/g,"");
};
endsnippet

snippet jsua
var UA =  {
	Ie: !!document.all,
	Ie6: !!document.all && !window.XMLHttpRequest,
	Ie7: !!document.all && /msie 7.0/gi.test(window.navigator.appVersion),
	Ie8: !!document.all && /msie 8.0/gi.test(window.navigator.appVersion),
	FF: /firefox/gi.test(window.navigator.userAgent),
	Opera: /opera/gi.test(window.navigator.userAgent),
	Chrom: /Chrom/gi.test(window.navigator.userAgent),
	Maxthon: /Maxthon/gi.test(window.navigator.userAgent)
}
endsnippet

snippet jsextend
/**
* 继承对象（复制属性/方法）
* @id extend
* @param {Object} 被复制对象（子对象）
* @param {Object} 复制对象（父对象）
* @param {Boolean}  是否重写属性/方法
* @return {Object} 返回被复制对象（子对象）
*/
function extend(target, souce, rewrite) {
	for (var property in souce) {
		if (rewrite) target[property] = souce[property];
			else if (!target[property]) target[property] = souce[property];
	}
	return target;
}
endsnippet

snippet getxy
/**
* 获取HTMLElement对象与窗口边界的距离
* @id getXY
* @param {Object} Dom对象
* @return {Object} 返回HTMLElement对象四边与窗口边界的距离
*/
function getXY(dom) {
	el = dom;
	var bodySize = getBodySize();
	var elRect = el.getBoundingClientRect();
	return {
		left: bodySize.sL + elRect.left,
		right: bodySize.sL + elRect.right,
		top: bodySize.sT + elRect.top,
		bottom: bodySize.sT + elRect.bottom
	};
}
/**
* 获取页面可视宽、高、滚动全高、滚动全宽、滚动高、滚动宽
* @id getBodySize
* @return {Object} 页面宽度值、高度值、滚动全高度值、滚动全宽度值、滚动高值、滚动宽值
*/
function getBodySize() {
	if (document.compatMode == "BackCompat") {
		var clientH = document.body.clientHeight;
		var clientW = document.body.clientWidth;
		var scrollH = document.body.scrollHeight;
		var scrollW = document.body.scrollWidth;
		var scrollT = document.body.scrollTop;
		var scrollL = document.body.scrollLeft;
	} else if (document.compatMode == "CSS1Compat") {
		var clientH = document.documentElement.clientHeight;
		var clientW = document.documentElement.clientWidth;
		var scrollH = document.documentElement.scrollHeight;
		var scrollW = document.documentElement.scrollWidth;
		var scrollT = document.body.scrollTop || document.documentElement.scrollTop;
		var scrollL = document.body.scrollLeft || document.documentElement.scrollLeft;
	}
	return {
		cH: clientH,
		cW: clientW,
		sH: scrollH,
		sW: scrollW,
		sT: scrollT,
		sL: scrollL
	};
}
endsnippet

snippet getbodysize
/**
* 获取页面可视宽、高、滚动全高、滚动全宽、滚动高、滚动宽
* @id getBodySize
* @return {Object} 页面宽度值、高度值、滚动全高度值、滚动全宽度值、滚动高值、滚动宽值
*/
function getBodySize() {
	if (document.compatMode == "BackCompat") {
		var clientH = document.body.clientHeight;
		var clientW = document.body.clientWidth;
		var scrollH = document.body.scrollHeight;
		var scrollW = document.body.scrollWidth;
		var scrollT = document.body.scrollTop;
		var scrollL = document.body.scrollLeft;
	} else if (document.compatMode == "CSS1Compat") {
		var clientH = document.documentElement.clientHeight;
		var clientW = document.documentElement.clientWidth;
		var scrollH = document.documentElement.scrollHeight;
		var scrollW = document.documentElement.scrollWidth;
		var scrollT = document.body.scrollTop || document.documentElement.scrollTop;
		var scrollL = document.body.scrollLeft || document.documentElement.scrollLeft;
	}
	return {
		cH: clientH,
		cW: clientW,
		sH: scrollH,
		sW: scrollW,
		sT: scrollT,
		sL: scrollL
	};
}
endsnippet

snippet ie6cache
/*
*针对ie6背景图片缓存
*/
try{
	var userAgent = navigator.userAgent.toLowerCase();
	var env = null;
	var ver = 0;
	env = userAgent.match(/msie ([\d.]+)/);ver = env ? parseInt(env[1], 10) : 0;
	if(ver == 6){
		try{ 
			document.execCommand("BackgroundImageCache", false, true);
		}catch(e){}
	}
}catch(e){}
endsnippet

snippet stope
/**
* 停止事件冒泡
* @id stopEvent
* @param {Object} Event对象
*/
function stopEvent(event) {
	event = window.event || event;
	if (event.stopPropagation) {
		event.stopPropagation();
	} else {
		event.cancelBubble = true;
	}
}
endsnippet

snippet jsgetreq
function getRequest(){
	var url = location.search; //获取url中"?"符后的字串
	var theRequest = new Object();
	if (url.indexOf("?") != -1) {
		var str = url.substr(1);
		strs = str.split("&");
		for(var i = 0; i < strs.length; i ++) {
			theRequest[strs[i].split("=")[0]]=strs[i].split("=")[1];
		}
	}
	return theRequest;
}
endsnippet

snippet stopb
//非默认
if(e.stopPropagation){
	e.stopPropagation();
} else{
	e.cancelBubble = true;
}
//默认
if(e.preventDefault){
	e.preventDefault();
}else{
	e.returnValue = false;
}
endsnippet

snippet kgajax
Kg.Ajax("post", "${1:url}", true, "${2:a=10&b=20}", ${3:callback}, ${4:error}, "json");
endsnippet

snippet kggbs
var o = Kg.getBodySize();
endsnippet

snippet kggs
Kg.getStyle(${1:dom}, "${2:font-size}");  
endsnippet

snippet kggxy
Kg.getXY(${1:dom});
endsnippet

snippet kgadde
Kg.$("${1:dom}").addEvent("${2:click}", function(){
	${3:code}
});
endsnippet

snippet kgpost
Kg.post("${1:url}", ${2:{"name":"kugou"}}, ${3:callback});
endsnippet

snippet kggetjson
Kg.getJSON("${1:url}", ${2:{"name":"kugou"}}, ${3:callback});
endsnippet

snippet kglit
{literal}
${1:""}
{/literal}
endsnippet

snippet kgtj
/**
* 通用统计
* @param { Number || Array }
* @param { String }
*/
function sdnClick(key,type){
	if(!key){return;}
	var src = (new Date()).getTime();

	//判断是否为数组
	if(Object.prototype.toString.call(key)==='[object Array]'){
		for(var i=0,l=key.length;i<l;i++){
			src = (new Date()).getTime();
			switch(type){
				case "aspx": src = 'http://sdn.kugou.com/link.aspx?id=' + key[i] + '&url=&t=' + src; break;
					case "php":
						default:  src = 'http://tj.kugou.com/front/link.php?id=' + key[i] + '&url=&t=' + src; break;
			};
				(new Image()).src = src;
		}
	}else{
		switch(type){
			case "aspx": src = 'http://sdn.kugou.com/link.aspx?id=' + key + '&url=&t=' + src; break;
				case "php":
					default:  src = 'http://tj.kugou.com/front/link.php?id=' + key + '&url=&t=' + src; break;
		};
			(new Image()).src = src;
	}
}
endsnippet

snippet kgplay
/*{"Hash":"F612BF97F642D60F4C81B66910F94B7D", "FileName":"筷子兄弟", "timeLen":"291"},{"Hash":"28CFEB81BF1CA25FC463C2F099A28A27", "FileName":"陈奕迅", "timeLen":"211"}*/
function play(data){
	var files = "";
	var counter = 0;

	for(var j = 0; j < data.length;j++){
		if(data[j].sid == oid){
			if(files.length > 0){
				files += ",";
			}
			var fn = data[j].singername;
			if(fn.indexOf("】") > -1 && fn.trim().indexOf("】") != fn.trim().length-1){
				fn = fn.substring(fn.indexOf("】")+1);
			}

			var json = '{"Hash":"' + data[j].hash + '", "FileName":"' + fn +  '", "timeLen":"' + (data[j].duration/1000) + '"}';
			files += json;

			counter = counter + 1;
		}
	}

	if(files.length > 0){
		try{
			KgWebSuperCall.playSongs('[' + files + ']', 'yueku_omnibus');
		}catch(exp){}
	}
}
endsnippet

snippet kgsharealbum
/**
* 分享
* @name shareAlbum
* @param { String } 分享渠道
* @param { Number } 精选辑id
*/
function shareAlbum(chl, id){
	var el = Kg.$C("s_" + id)[0];
	//专辑名
	var name = Kg.$T("a", el)[0].title;
	//分享图片
	var img = Kg.$T("img", el)[0].getAttribute("_src");
	//简介
	var intro = Kg.$C("text",el)[0].innerHTML;
	img = img.match(/\b\d+\.\w+$/);
	openShareAlbum(chl, name, id, img, "special", intro);
}

//存在于base.js中
function openShareAlbum(chl, name, id, pic, type, intro){
	var url = "http://www.kugou.com/interface/fromsoft/?action=share&microblog=1";
		url += "&plat=" + chl;
	url += "&name=" + encodeURI(name);
	url += "&id=" + id;
	url += "&pic=" + pic;
	url += "&share_type=" + type;
	url += "&intro=" + encodeURI(intro);
	window.open(url);
}
endsnippet

snippet jsfloat
//侧栏浮动
function initSideFloat(){
	var dc = document,
	//距离底部的高度
	bottomDistance = 100,
	isIE6 = (function(){
		if(window.XMLHttpRequest){
			return false;
		}else{
			return true;
		}
	})(),
	sidefloat = dc.createElement("div");
	sidefloat.className = "side_float";
	sidefloat.innerHTML = [
		'<a href="javascript:;" class="s1" title="">回到顶部</a>',
		'<a href="http://www.kugou.com/kf/user/app/" target="_blank" class="s2" title="意见反馈">意见反馈</a>'
	].join("");
		dc.body.appendChild(sidefloat);
		if(isIE6){
			sidefloat.style.bottom = "auto";
			fixHandle();
			window.onscroll = function(){
				fixHandle();
			};
			window.onresize = function(){
				fixHandle();
			};
			function fixHandle(){
				sidefloat.style.top = (dc.body.scrollTop||dc.documentElement.scrollTop) + dc.documentElement.clientHeight - bottomDistance + "px";
			}
		} else{
			sidefloat.style.bottom = bottomDistance + "px";
		}
		//回到顶部
		function scrollToTop(){
			var scrollTop = dc.documentElement.scrollTop || dc.body.scrollTop;
			var iSpeed = Math.floor((-scrollTop)/2);
			if(scrollTop <= 0){
				return;
			}
			document.documentElement.scrollTop = document.body.scrollTop = scrollTop + iSpeed;
			setTimeout(arguments.callee,50);
		}
		//绑定事件
		sidefloat.children[0].onclick = scrollToTop;
}
endsnippet

snippet jsweixin
/*微信分享*/
var dataForWeixin = {
	appId: "",
	msgImg: "http://m.kugou.com/static/images/share2014/cover.png",
	url: location.href,
	title: document.title,
	desc: "",
	fakeid: "",
	callback: function() {}
};
(function() {
	var onBridgeReady = function() {
		/*发送给好友*/
		WeixinJSBridge.on('menu:share:appmessage', function(argv) {
			WeixinJSBridge.invoke('sendAppMessage', {
				"appid": dataForWeixin.appId,
				"img_url": dataForWeixin.msgImg,
				"img_width": "120",
				"img_height": "120",
				"link": dataForWeixin.url,
				"desc": dataForWeixin.desc,
				"title": dataForWeixin.title
			},
			function(res) { 
				(dataForWeixin.callback)();
			});
		});
		/*分享到朋友圈*/
		WeixinJSBridge.on('menu:share:timeline', function(argv) {
			WeixinJSBridge.invoke('shareTimeline', {
				"img_url": dataForWeixin.msgImg,
				"img_width": "400",
				"img_height": "400",
				"link": dataForWeixin.url,
				"desc": dataForWeixin.desc,
				"title": dataForWeixin.desc
			},
			function(res) { 
				(dataForWeixin.callback)();
			});
		});
	};
	// 当微信内置浏览器完成内部初始化后会触发WeixinJSBridgeReady事件。
	if (document.addEventListener) {
		document.addEventListener('WeixinJSBridgeReady', onBridgeReady, false);
	} else if (document.attachEvent) {
		document.attachEvent('WeixinJSBridgeReady', onBridgeReady);
		document.attachEvent('onWeixinJSBridgeReady', onBridgeReady);
	}
})();
endsnippet

snippet jsaudiobind
audio.addEventListener("loadstart", function(){});
audio.addEventListener("durationchange", function(){});
audio.addEventListener("loadedmetadata", function(){});
audio.addEventListener("loadeddata", function(){});
audio.addEventListener("progress", function(){});
audio.addEventListener("canplay", function(){});
audio.addEventListener("canplaythrough", function(){});
endsnippet

snippet jsvideobind
video.addEventListener("loadstart", function(){});
video.addEventListener("durationchange", function(){});
video.addEventListener("loadedmetadata", function(){});
video.addEventListener("loadeddata", function(){});
video.addEventListener("progress", function(){});
video.addEventListener("canplay", function(){});
video.addEventListener("canplaythrough", function(){});
endsnippet

snippet canvas
var canvas = document.getElementById("${1}");
var context = canvas.getContext("2d");
context.fillStyle="#FF0000";//填充颜色
context.fillRect(0,0,150,75); //开始位置x,y,宽高width,height

/*
context.moveTo(10,10);//开始画线位置x,y
context.lineTo(150,50);//移动位置
context.lineTo(10,50);
context.stroke();//处理
context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);
var base64 = canvas.toDataURL("image/png")); 
*/
endsnippet

snippet kgjsonp
Kg.Ajax({
	docType : "jsonp",
	method : "get", 
	url : "",
	callbackFuncName : "",
	args : metadata,
	callback : function(res){
		console.log(res);
	},
	error : function(){}
});
endsnippet

snippet kgshare
function shareTo (plat){
	plat = plat || "sina";
	var _this = MoPage,
	option = {
		popupWidth:615,
		popupHeight:505,
		title:globalParam.shareTitle,
		url:globalParam.shareUrl,
		content:globalParam.shareContent,
		imgSrc:globalParam.shareImg,
		swf:"",
		appkey:"340086183",
		/*(新浪微博) 用参数,关联用户的UID，分享微博会@该用户(可选)*/
		ralateUid:""
	},
	winSrc = "",
	queryStr = "";

	var _title = encodeURIComponent(globalParam.shareTitle),
	_url = encodeURIComponent(globalParam.shareUrl),
	_content = encodeURIComponent(globalParam.shareContent),
	_imgSrc =  encodeURI(globalParam.shareImg);
	_swf = encodeURI(globalParam.shareSwf || "");

	if(_this.isInClient()){
		var client_share = {
			"shareName" : globalParam.shareTitle,
			"hash" : "",
			"listID" : "",
			"type" : 3,
			"shareData" : {
				"linkUrl" : encodeURIComponent(globalParam.shareUrl),
				"picUrl" : globalParam.shareImg,
				"content": globalParam.shareContent,
				"title" : globalParam.shareTitle
			},
			"suid" : "",
			"slid" : "",
			"imgUrl" : "",
			"filename" : "",
			"duration": 0
		};
		KgMobileCall.share(Kg.JSON.stringify(client_share));
	}else{
		switch(plat){
			case 'sina':
				option.popupWidth = 615;
				option.popupHeight = 505;
				winSrc = "http://service.t.sina.com.cn/share/share.php";
				queryStr = [
					"url=" + _url,
					"appkey=" + option.appkey,
					"title=" + _content,
					"pic=" + _imgSrc,
					"ralateUid=" + option.ralateUid 
				].join("&");
				break;
			default : 
				return;
		}

		var l = (screen.width - option.popupWidth)/2,
		t = (screen.height - option.popupHeight)/2,
		resultUrl = winSrc + "?" + queryStr;

		location.href = resultUrl;
	}

	if(globalParam.stat.shareId !== ""){
		phpLogClick(globalParam.stat.shareId);
	}
}
endsnippet

snippet jsopenapp
(function() {
	var isInstalled = 0,
	//0:未知， 1:安装，2：没安装
	ua = navigator.userAgent;

	var schemelAndroid = 'kugou://start.weixin',
	schemelIOS = 'kugouurl://start.weixin',
	downloadURL = "",
	schemelUrl = "";

	if (ua.match(/iPhone|iPod/)) {
		schemelUrl = schemelIOS;
		downloadURL = "itms-apps://itunes.apple.com/cn/app/ku-gou-yin-le/id472208016?mt=8";
	} else if (ua.match(/Android/)) {
		schemelUrl = schemelAndroid;
		downloadURL = "http://downmobile.kugou.com/promote/package/download/channel=118";
	} else if (ua.match(/iPad/)) {
		schemelUrl = schemelIOS;
		downloadURL = "itms-apps://itunes.apple.com/cn/app/ku-gou-yin-le/id472208016?mt=8";
	}

	//if (ua.indexOf('KGBrowser') >= 0) { }

	document.getElementById("go_enter").addEventListener("click", function() {
		if (isInstalled == 1) {
			location = schemelUrl;
		} else if (isInstalled == 2) {
			!!downloadURL && (location.href = downloadURL);
		} else {
			if (ua.match(/Android/)) { // android
				var iframe = document.createElement("iframe");
				iframe.style.width = "1px";
				iframe.style.height = "1px";
				iframe.style.display = "none";
				var start = new Date().valueOf();
				iframe.src = schemelUrl;
				// 执行打开动作
				document.body.appendChild(iframe);
				setTimeout(function() {
					if (!document.webkitHidden) {
						var end = new Date().valueOf();
						if ((end-start) < 1550) {
							// 打开失败进入这个异常处理
							window.location.href = downloadURL;
						}
					}
				}, 1500);

			} else if (ua.match(/iPhone|iPad|iPod/)) { // IOS
				var start = new Date().valueOf();
				window.location.href = schemelUrl;
				setTimeout(function() {
					if (!document.webkitHidden) {
						var end = new Date().valueOf();
						if ((end-start) < 2000) {
							window.location.href = downloadURL;
						}
					}
				}, 1500);
			}
		}
	}, false);
})();
endsnippet

snippet jshttp
var XMLHttp = null;
if (window.XMLHttpRequest && !(window.ActiveXObject)) {
	XMLHttp = new XMLHttpRequest();
} else if (window.ActiveXObject) {
	try {
		XMLHttp = new ActiveXObject("Microsoft.XMLHTTP");
	} catch(otherMSIE) {
		try {
			XMLHttp = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(NoSupport) {
			XMLHttp = null;
		}
	}
}
XMLHttp.onreadystatechange = function(){};
//XMLHttp.open("post", "http://cpm.sdn.kugou.com/default.html?id=211", true);
XMLHttp.open("post", "http://192.168.19.243:1105/10.13.0.30/demo/log.php", true);
XMLHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
XMLHttp.send();
endsnippet

snippet jsbefore
var color = window.getComputedStyle(
	document.querySelector('.element'), ':before'
).getPropertyValue('color')
endsnippet

snippet jspagescroll
/*
*页面滑动
* params { Number } 滚动的高度
* params { Number } 滚动条高度
*/
var popToTop = function(h,s){
	var nav_t = 0,
	nav_d = 30,  //速度
	nav_c = h,  //高度
	dc = document,
	nac = dc.documentElement || dc.body,
	popSc = function(t,b,c,d){
		return (t == d) ? b + c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
	};

	function down(){
		if(nav_t < nav_d){
			nav_t++;
			nac.scrollTop = Math.ceil(popSc(nav_t,0,nav_c,nav_d)) + s;
			setTimeout(down, 10);
		}
	}
	down();
};
endsnippet

snippet jsresize
/**
 * 重置字体大小 
 */
(function() {
	if ( !! navigator.userAgent.match(/AppleWebKit.*Mobile.*/)) {
		var body_fontsize = document.body.currentStyle || document.defaultView.getComputedStyle(document.body, '');
		if (body_fontsize && parseInt(body_fontsize, 10) == 8) {
			setTimeout(function() {
				var vw = window.innerWidth || document.documentElement.clientWidth,
				fs = Math.ceil((vw * 16) / 480);
				if (fs % 2 == 1) {
					fs++;
				}
				try {
					document.getElementsByTagName("html")[0].style.fontSize = fs + "px";
					document.getElementsByTagName("body")[0].style.fontSize = fs + "px";
				} catch(e) {}
			},
			1000);
		}
	}
})();
endsnippet

snippet jsresizemin
(function(){if(!!navigator.userAgent.match(/AppleWebKit.*Mobile.*/)){var a=document.body.currentStyle||document.defaultView.getComputedStyle(document.body,"");a&&parseInt(a,10)==8&&setTimeout(function(){var b=window.innerWidth||document.documentElement.clientWidth,a=Math.ceil(b*16/480);if(a%2==1)a++;try{document.getElementsByTagName("html")[0].style.fontSize=a+"px";document.getElementsByTagName("body")[0].style.fontSize=a+"px"}catch(c){}},1e3)}})();
endsnippet

snippet getimg
var setUploadImg = function(target, imgTarget){
	// 检查是否支持FileReader对象
	if (typeof FileReader != 'undefined') {
		var dc = document,
			acceptedTypes = {
			'image/png': true,
			'image/jpeg': true,
			'image/gif': true
		};
		if (target.files[0].type && acceptedTypes[target.files[0].type] === true) {
			/*使用文件api获取图片*/
			var reader = new FileReader();
			reader.onload = function (event) {
				imgTarget.src = event.target.result;
			};
			reader.readAsDataURL(target.files[0]);
		}else{
			alert("图片格式不正确");
		}
	}
};
endsnippet

snippet trigger
var trigger = function(target,type){
	var dc = document;
	if(dc.createEvent){
		var evt = dc.createEvent("HTMLEvents");
		evt.initEvent(type,false,true);
		target.dispatchEvent(evt);
	}
	else if(dc.createEventObject){
		target.fireEvent("on" + type);
	}
};
endsnippet

snippet regdomain
var reg = /^http:\/\/.*?\//;
endsnippet

snippet getflash
function getFlash(flashName) {
	if (navigator.appName.indexOf("Microsoft") != -1) {
		try{
			return document[flashName];
		}catch(e){
			return window[flashName];
		}
	}else{
		return document[flashName];
	}
}
endsnippet

snippet getflasever
function getFlashVersion() {
	var ver,
		SF = "ShockwaveFlash";

	// for NPAPI see: http://en.wikipedia.org/wiki/NPAPI
	if (navigator.plugins && navigator.mimeTypes.length) {
		ver = (navigator.plugins["Shockwave Flash"] || 0).description;
	}
	// for ActiveX see:	http://en.wikipedia.org/wiki/ActiveX
	else if (win.ActiveXObject) {
		try {
			ver = new win.ActiveXObject(SF + "." + SF).GetVariable("$version");
		} catch (ex) {
			// S.log("getFlashVersion failed via ActiveXObject");
			// nothing to do, just return undefined
		}
	}

	// 插件没安装或有问题时，ver 为 undefined
	if (!ver) {
		return undefined;
	}

	// 插件安装正常时，ver 为 "Shockwave Flash 10.1 r53" or "WIN 10,1,53,64"
	return getArrayVersion(ver);
}
endsnippet

snippet ctxdi
${1:ctx}.drawImage(${2:img}, ${3:sX}, ${4:sY}, ${5:sW}, ${6:sH}, ${7:dX}, ${8:dY}, ${9:dW}, ${10:dH});
endsnippet

snippet ctxclear
${1:ctx}.clearRect(${2:x}, ${3:y}, ${4:w}, ${5:h});
endsnippet

snippet ctxrect
${1:ctx}.rect(${2:x}, ${3:y}, ${4:w}, ${5:h});
endsnippet

snippet ctxarc
${1:ctx}.arc(${2:x}, ${3:y}, ${4:radius}, ${5:startAngle}, ${6:endAngle}, ${7:anticlockwise});
endsnippet

snippet ctxmt
${1:ctx}.arc(${2:x}, ${3:y});
endsnippet

snippet stage
/**
* Stage {Class}
* 一个canvas对应一个stage实例
* @inherit {objectContainerClass }
* @param {htmlCanvasElement} 
*/
var Stage = ObjectContainerClass.extend({
	onRefresh : function(){},
	addEventListener : function(type, func){
		return this._super(type, func);
	},
	removeEventListener : function(type, func){
		return this._super(type, func);
	},
	removeAllEventListener : function(type){
		return this._super(type);
	},
	hasEventListener : function(type){
		return this._super(type);
	},
	getContext : function(){
		return this._super();
	},
	addChild : function(child){
		return this._super(child);
	},
	addChildAt : function(child, index){
		return this._super(child, index);
	},
	removeChild : function(child){
		return this._super(child);
	},
	removeChildAt : function(child, index){
		return this._super(child, index);
	},
	getChildAt : function(index){
		return this._super(index);
	},
	getChildIndex : function(child, index){
		return this._super(child, index);
	},
	contain : function(child){
		return this._super(index);
	},
	dispathMouseEvent : function(type, x, y){
		return this._super(type, x, y);
	},
	clearHoverChildren : function(){
		return this._super();
	},
	render : function(){},
	clear : function(x, y, w, h){},
	start : function(){},
	stop : function(){},
	init : function(canvas, option){}
});
endsnippet

snippet sprite
/**
* Sprite {Class}
* @inherit {objectContainerClass }
* @param {htmlCanvasElement} 
* option {
*	stage : 
*	x : 
*	y : 
*	width : 
*	height : 
* }
*/
var Sprite = ObjectContainerClass.extend({
	onRefresh : function(){},
	addEventListener : function(type, func){
		return this._super(type, func);
	},
	removeEventListener : function(type, func){
		return this._super(type, func);
	},
	removeAllEventListener : function(type){
		return this._super(type);
	},
	hasEventListener : function(type){
		return this._super(type);
	},
	getContext : function(){
		return this._super();
	},
	addChild : function(child){
		return this._super(child);
	},
	addChildAt : function(child, index){
		return this._super(child, index);
	},
	removeChild : function(child){
		return this._super(child);
	},
	removeChildAt : function(child, index){
		return this._super(child, index);
	},
	getChildAt : function(index){
		return this._super(index);
	},
	getChildIndex : function(child, index){
		return this._super(child, index);
	},
	contain : function(child){
		return this._super(index);
	},
	dispathMouseEvent : function(type, x, y){
		return this._super(type, x, y);
	},
	clearHoverChildren : function(){
		return this._super();
	},
	render : function(){},
	onDrag : function(x, y){},
	onDrop : function(x, y){},
	init : function(canvas, option){}
});
endsnippet

snippet csssel
user-select: none; 
-ms-user-select: none; 
-webkit-user-select: none; 
-khtml-user-select: none; 
-moz-user-select: none; 
-webkit-touch-callout: none; 
-webkit-user-drag: none; 
endsnippet

snippet loadNum
/**
* @method loadNum 
* @param { Number } from
* @param { Number } to
*/
var ${1:percent} = 0;
var ${2:loadNum} = function(from , to){
	if(${4:$1} < to){
		if(${5:$1} >= from){
			${6:$1}++;
		}
		console.log(${7:$1});
		${3:$2}(${8:$1} ,to);
		if(${9:$1} >= 100){
			//code
		}
	}
};
endsnippet

#Phaser S
snippet phatlasjson
var botData = {
"frames": [{
	"filename": "running bot.swf/0000",
	"frame": { "x": 34, "y": 128, "w": 56, "h": 60 },
	"rotated": false,
	"trimmed": true,
	"spriteSourceSize": { "x": 0, "y": 2, "w": 56, "h": 60 },
	"sourceSize": { "w": 56, "h": 64 }
}, {
	"filename": "running bot.swf/0001",
	"frame": { "x": 54, "y": 0, "w": 56, "h": 58 },
	"rotated": false,
	"trimmed": true,
	"spriteSourceSize": { "x": 0, "y": 3, "w": 56, "h": 58 },
	"sourceSize": { "w": 56, "h": 64 }
}, {
	"filename": "running bot.swf/0002",
	"frame": { "x": 54, "y": 58, "w": 56, "h": 58 },
	"rotated": false,
	"trimmed": true,
	"spriteSourceSize": { "x": 0, "y": 3, "w": 56, "h": 58 },
	"sourceSize": { "w": 56, "h": 64 }
}, {
	"filename": "running bot.swf/0003",
	"frame": { "x": 0, "y": 192, "w": 34, "h": 64 },
	"rotated": false,
	"trimmed": true,
	"spriteSourceSize": { "x": 11, "y": 0, "w": 34, "h": 64 },
	"sourceSize": { "w": 56, "h": 64 }
}],
"meta": {
	"app": "http://www.texturepacker.com",
	"version": "1.0",
	"image": "running_bot.png",
	"format": "RGBA8888",
	"size": { "w": 252, "h": 256 },
	"scale": "0.2",
	"smartupdate": "$TexturePacker:SmartUpdate:fb56f261b1eb04e3215824426595f64c$"
}
};
endsnippet

snippet phlimg
${1:game}.load.image(${2:key}, ${3:src});
endsnippet

snippet phlaudio
${1:game}.load.audio(${2:key}, ${3:src});
endsnippet

snippet phlspsheet
${1:game}.load.spritesheet('${2:key}', '${3:pic}', ${4:frameWidth_maxInt}, ${5:frameHeight}, ${6:-frameMax}, ${7:-margin}, ${8:-spacing});
endsnippet

snippet phlatlas
${1:game}.load.atlas('${2:key}', '${3:pic}', ${4:null}, ${5:jsonData});
endsnippet

snippet phlfnt
${1:game}.load.bitmapFont('${2:key}', '${3:pic}', ${4:fnt});
endsnippet

snippet phlanimate
${1:game}.load.atlasJSONHash('${2:key}', '${3:pic}', '${4:json}');
endsnippet

snippet phaddsp
var ${1:sprite} = ${2:game}.add.sprite(${3:x}, ${4:y}, ${5:key}, ${6:-frame}, ${7:-group});
endsnippet

snippet phaddbmd
var ${1:sprite} = ${2:game}.add.bitmapData(${3:width}, ${4:height}, ${5:-key}, ${6:-isAddToCache_false});
endsnippet

snippet phaddimg
var ${1:image} = ${2:game}.add.image(${3:x}, ${4:y}, ${5:key});
endsnippet

snippet phaddaudio
var ${1:game}.add.audio(${2:key});
endsnippet

snippet phaddtxt
var ${1:text_name} = ${2:game}.add.text(${3:x}, ${4:y}, '${5:txt}', {${6:font:'16px Arial', fill:'#FFFFFF'}});
${7:$1}text.setText("ok,change");
endsnippet

snippet phaddfnttxt
var ${1:text_name} = ${3:game}.add.bitmapText(${4:x}, ${5:y}, '${6:fnt_key}', '${7:msg}', ${8:size}, ${9:group});
endsnippet

snippet phaddgroup
var ${1:group_name} = ${2:game}.add.group();
endsnippet

snippet phaddtween
var ${1:tween_name} = ${2:game}.add.tween(${3:sprite}).to(${4:{ y: 400 }}, ${5:duration_2000}, ${6:Phaser.Easing.Quadratic.InOut}, ${7:isAutoStart_true}, ${8:delay:0}, ${9:repeat_1000}, ${10:isLikeYoyo_true});
endsnippet

snippet phaddtilesp
var ${1:tilesprite} = ${2:game}.add.tileSprite(${3:x}, ${4:y}, ${5:width}, ${6:height}, '${7:key}');
endsnippet

snippet phaddemi
var ${1:emitter} = ${2:game}.add.emitter(${3:x}, ${4:y}, ${5:maxParticles}');
${7:emitter}.makeParticles('${6:key}');
${8:emitter}.start(${9:-explode_false}, ${10:-lifespan_0_forever}, ${11:-frequency_250}, ${12:-quantity_0_all}, ${13:-forceQuantity_false});
endsnippet

snippet phaddbutton
var ${1:button} = ${2:game}.add.button(${3:x}, ${4:y}, '${5:key}', ${6:onpressedCallback_func}, this, ${7:-overFrame_int_2}, ${8:-outFrame_int_1}, ${9:-downFrame_int_0, ${10:-upFrame_int_0}});
endsnippet

snippet phaddtimer
var ${1:timer};
${4:$1}timer = ${2:game}.time.events.loop(Phaser.Timer.SECOND, ${3:func}, this);
${5:$2}.time.events.remove(${6:$1});
${7:$2}.time.events.stop(false); //先不要启动时钟
endsnippet

snippet phcreatetimer
var ${1:timer} = ${2:game}.time.create(false);
${5:$1}.loop(${3:duration}, ${4:func}, this);
${6:$1}.start();
endsnippet

snippet phtop
${1:sprite}.bringToTop();
endsnippet

snippet phaniadd
var ${1:animation} = ${2:sprite}.animations.add(${3:name}, ${4:-[0, 1, 2,...]}, ${5:-fps}, ${6:-isYoyo});
endsnippet

snippet phaniplay
${1:sprite}.animations.play(${2:name}, ${3:-fps}, ${4:-isLoop});
endsnippet

snippet phanistop
${1:sprite}.animations.stop('{2:name}', ${3:resetFrame_0});
endsnippet

snippet phphy
${1:game}.physics.startSystem(Phaser.Physics.${2:ARCADE|P2|NINJA});
endsnippet

snippet phphysp
//开启${3:$2}的物理系统
${1:game}.physics.enable(${2:sprit},Phaser.Physics.${2:ARCADE|P2|NINJA}); 
endsnippet

snippet phphyarcpz
//产生物理作用
${1:game}.physics.arcade.collide(${2:sprite1}, ${3:sprite2}, ${4:callback},${5:collideCallback}, ${6:processCallback}, this);
//不产生物理作用
${7:$1}.physics.arcade.overlap(${8:$2}, ${9:$3}, ${10:$4}, ${11:$5}, ${12:$6}, this);
endsnippet

snippet phgetworldcx
${1:game}.world.centerX
endsnippet

snippet phsetworldbou
{1:game}.world.setBounds(${2:x}, ${3:y}, ${4:maxW}, ${5:maxH});
snippet phsetworldbou

snippet phgroupcreate
${1:group}.create(${2:x}, ${3:y}, ${4:key}, '${5:exists_frame_key}');
endsnippet

snippet phspaddeventover
${1:game}.inputEnabled = true;
${2:$1}.input.useHandCursor = true; //if you want a hand cursor
${3:$1}.events.onInputOver.add(${4:func}, this);
endsnippet

snippet phspaddeventdrag
${1:sprite}.inputEnabled = true;
${2:$1}.input.enableDrag();
${3:$1}.events.onDragStop.add(${4:func}, this);
endsnippet

snippet phspaddevent
${1:sprite}.inputEnabled = true;
${3:$1}.events.on${2:event}.add(${4:func}, this);
endsnippet

snippet phrndrange
${1}.rnd.integerInRange(${2:fromNum}, ${3:toNum})
endsnippet

snippet phanigenframe
Phaser.Animation.generateFrameNames('${1:name}', ${2:-start_xxx000X}, ${3:-stop_xxx000X}, '${4:-suffix_ }', ${5:-zeroPad_0});
endsnippet

snippet phgroupcallall
//child.animations.add('swim', frameNames, 30, true, false)
//group.callAll('animations.add', 'animations', 'swim', frameNames, 30, true, false);
//child.method(parameter){context class};
${1:group}.callAll(${2:method_animations.add}, ${3:context_animations}, ${4:parameter_*_repeat});
endsnippet

snippet phaddgroupsetall
${1:group}.setAll('${2:checkWorldBounds}',${3:value}, ${4:-ischeckAlive_false}, ${5:-ischeckVisible_false});
endsnippet

snippet phpinputsnap
${1:sprite}.input.enableSnap(${2:snapX}, ${3:snapY}, ${4:-isOnDrag}, ${5:-isOnRelease}, ${6:-snapOffsetX}, ${7:-snapOffsetX});
endsnippet

snippet phac
${1:sprite}.anchor.${2};
endsnippet

snippet phwgl
Phaser.WEBGL
endsnippet

snippet phcanvas
Phaser.CANVAS
endsnippet

snippet phauto
Phaser.AUTO
endsnippet

snippet phpel
Phaser.Easing.Linear.None
endsnippet

snippet phpeq
Phaser.Easing.Quadratic.InOut
endsnippet

snippet phscale
//控制游戏的旋转
${1:game}.scale.scaleMode = ${9:Phaser.ScaleManager.EXACT_FIT_最大化|Phaser.ScaleManager.NO_SCALE_将禁用缩放|Phaser.ScaleManager.SHOW_ALL_按比例缩放};
${3:$1}.scale.minWidth = 40;
${3:$1}.scale.minHeight = 20;
${4:$1}.scale.maxWidth = 40;
${5:$1}.scale.maxHeight = 20;
${6:$1}.scale.forceLandscape = true;
//将垂直方向居中
${10:$1}.scale.pageAlignZontally = true;
//将使游戏在水平
${7:$1}.scale.pageAlignHorizontally = true;
//激活缩放。
${8:$1}.scale.setScreenSize(true);
endsnippet

snippet phgame
var ${1:game} = new Phaser.Game(${2:width}, ${3:height}, Phaser.${4:AUTO|WEBGL|CANVAS}, '${5}', { preload: ${6:preload}, create: ${7:create}, update: ${8:update} });

${9:$1}.States = {
	/*启动场景*/
	boot : function(){
		this.preload = function(){};
		this.create = function(){};
		this.update = function(){};
	}
};
//添加场景
${10:$1}.state.add("boot", ${11:$1}.States.boot);
//启动场景
${12:$1}.state.start("boot");
endsnippet

snippet phaddstate
${1:game}.stage.add();
endsnippet

snippet phstate
//定义一个场景
var ${1:state_name} = function(){
	this.preload = function(){};
	this.create = function(){};
	this.update = function(){};
};

//把定义好的场景添加到游戏中
${2}.state.add('${3}', ${$4});
${5:$2}.state.start('${6:$3}');
endsnippet

snippet phsetloadsp
var ${1:preloadSprite} = ${2}.add.sprite(${3:x}, ${4:y}, '${5:key}');
${6:$2}.load.setPreloadSprite(${7:$1}, ${8:direction_0_1});
${9:$1}.load.onFileComplete.add(function(${10:progress, key, isSucc, loadNum , totalNum}) {});
endsnippet

snippet phloading
//加载进度
var text = game.add.text( game.world.centerX, game.world.centerY, "0%",{font:"16px Arial", fill:"#FFFFFF", align: "center"}),
percent = 0,
curPercent = 0,
loadKey,
_addPrecent = function(from, to){
	if(percent < to){
		if(percent >= from){
			percent++;
		}

		text.setText(percent + "%");

		if(percent == 100){
			game.time.events.remove(loadKey);
		}
	}
};
//文字居中
text.anchor.set(0.5, 0.5);
//添加定时器
loadKey = game.time.events.loop(Phaser.Timer.SECOND / 30, function(){
	_addPrecent(percent , curPercent);
}, this);
//绑定
game.load.onFileComplete.add(function( progress ) {
	curPercent  = progress;
});
endsnippet

snippet gsbgc
${1:game}.stage.backgroundColor = "${2:color}";
endsnippet

snippet gpa
game.physics.arcade.${1:moveToPointer(bullet, 300)};
endsnippet

snippet gikc
var cursors = game.input.keyboard.createCursorKeys();
endsnippet

snippet phchkwb
${1:sprite}.checkWorldBounds = true; //边界检测
${2:$1}.outOfBoundsKill = true; //出边界就自动kill
endsnippet

#Phaser E
